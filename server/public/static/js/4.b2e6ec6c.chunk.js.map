{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","app/services/users.js","app/components/user/Profile.jsx"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","URL","window","location","origin","create","user","API","post","read","id","get","update","put","list","name","Profile","props","componentDidMount","setProfile","usersService","pathname","split","then","res","setState","helper","getCookie","surname","data","setValue","e","target","cancel","edit","submit","preventDefault","state","setCookie","reload","render","className","onSubmit","scope","colSpan","avatar","fullName","width","height","fontSize","type","onChange","email","dob","Date","getMonth","getDate","getFullYear","sex","getId","title","onClick","bind","Component"],"mappings":"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","file":"static/js/4.b2e6ec6c.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import API from '../apis/api'\n\nconst URL = `${process.env.NODE_ENV === 'production' ? window.location.origin + '/api' : process.env.REACT_APP_API}/users/`\n\nclass usersService {\n  create = user => API.post(URL, user)\n\n  read = id => API.get(`${URL}${id}`)\n\n  update = user => API.put(`${URL}${user.id}`, user)\n\n  list = name => API.get(`${URL}?name=${name}`)\n}\n\nexport default new usersService()","import React, { Component } from 'react'\nimport Avatar from '../user/Avatar'\nimport usersService from '../../services/users'\nimport helper from '../../services/helper'\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props)\n\n    this.setValue = this.setValue.bind(this)\n\n    this.state = {\n      id: '',\n      avatar: '',\n      fullName: '',\n      email: '',\n      sex: '',\n      name: '',\n      surname: '',\n      edit: false,\n    }\n  }\n\n  componentDidMount = () => this.setProfile()\n\n  setProfile = () =>\n    usersService\n      .read(window.location.pathname?.split('/')?.[1])\n      .then(res => this.setState({ name: helper.getCookie('name'), surname: helper.getCookie('surname') }) || this.setState(res.data))\n\n  setValue = e => this.setState({ [e.target.name]: e.target.value })\n\n  cancel = () => this.setProfile() && this.setState({ edit: false })\n\n  submit = e =>\n    e.preventDefault()\n    || (this.state.edit\n      ? usersService\n        .update(this.state)\n        .then(res => this.setProfile() && helper.setCookie(res.data) && window.location.reload() && this.setState({ edit: false }))\n      : this.setState({ edit: true }))\n\n  render = () => <main>\n    <section className=\"section-only\">\n      <form className=\"form-only\" onSubmit={this.submit}>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th className=\"text-center\" scope=\"col\" colSpan={2}>\n                PROFILE\n              </th>\n            </tr>\n            <tr>\n              <th scope=\"col\" colSpan={2}>\n                <div className=\"container-only\">\n                  <Avatar avatar={this.state.avatar} name={this.state.fullName} width=\"200px\" height=\"200px\" fontSize=\"150px\" />\n                </div>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.edit && <tr>\n              <th className=\"align-middle\" scope=\"row\">Avatar</th>\n              <td>\n                <input type=\"color\" className=\"form-control\" name=\"avatar\" value={this.state.avatar} onChange={this.setValue} />\n              </td>\n            </tr>}\n            {!this.state.edit && <tr>\n              <th className=\"align-middle\" scope=\"row\">Full name</th>\n              <td>{this.state.fullName}</td>\n            </tr>}\n            {this.state.edit && <tr>\n              <th className=\"align-middle\" scope=\"row\">Name</th>\n              <td>\n                <input className=\"form-control\" type=\"text\" name=\"name\" value={this.state.name} onChange={this.setValue} />\n              </td>\n            </tr>}\n            {this.state.edit && <tr>\n              <th className=\"align-middle\" scope=\"row\">Surname</th>\n              <td>\n                <input className=\"form-control\" type=\"text\" name=\"surname\" value={this.state.surname} onChange={this.setValue} />\n              </td>\n            </tr>}\n            <tr>\n              <th className=\"align-middle\" scope=\"row\">Email</th>\n              <td>{this.state.edit ? <input className=\"form-control\" type=\"text\" name=\"email\" value={this.state.email} onChange={this.setValue} /> : this.state.email}</td>\n            </tr>\n            <tr>\n              <th className=\"align-middle\" scope=\"row\">Date of birth</th>\n              <td>{this.state.edit ? <input className=\"form-control\" type=\"date\" name=\"dob\" value={this.state.dob} onChange={this.setValue} /> : (new Date(this.state.dob).getMonth() + 1) + '/' + new Date(this.state.dob).getDate() + '/' + new Date(this.state.dob).getFullYear()}</td>\n            </tr>\n            <tr>\n              <th className=\"align-middle\" scope=\"row\">Sex</th>\n              <td>{this.state.edit ? <select className=\"form-select\" name=\"sex\" value={this.state.sex} onChange={this.setValue}>\n                <option value=\"Male\">Male</option>\n                <option value=\"Female\">Female</option>\n                <option value=\"Other\">Other</option>\n              </select> : this.state.sex}</td>\n            </tr>\n            {window.location.pathname?.split('/')?.[1] === helper.getId() && <tr>\n              <td colSpan={2}>\n                <div className=\"container-only\">\n                  <button className={`btn-profile text-${this.state.edit ? 'warning' : 'info'}`} title={this.state.edit ? 'Save' : 'Edit'} type=\"submit\"><i className=\"material-icons\">{this.state.edit ? 'save' : 'edit'}</i></button>\n                  {this.state.edit && <button className={`btn-profile text-danger`} title=\"Cancel\" type=\"button\" onClick={this.cancel}><i className=\"material-icons\">cancel</i></button>}\n                </div>\n              </td>\n            </tr>}\n          </tbody>\n        </table>\n      </form>\n    </section>\n  </main>\n\n}\n"],"sourceRoot":""}